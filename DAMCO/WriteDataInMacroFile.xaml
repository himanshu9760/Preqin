<Activity mc:Ignorable="sap sap2010" x:Class="Sequence" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="var_outPutFilePath" Type="InArgument(x:String)" />
    <x:Property Name="var_macroOutPutFilePath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>653,1316</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Sequence_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="WriteDataInMacroFile" sap:VirtualizedContainerService.HintSize="663,1278" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_DealOutPut" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[File.Exists(var_outPutFilePath)]" sap:VirtualizedContainerService.HintSize="621,1186" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="476,1038" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="getFolderPath" />
            <Variable x:TypeArguments="x:String" Name="fileNameWithCurrentDateTime" />
            <Variable x:TypeArguments="sd:DataTable" Name="dtWithYes" />
            <Variable x:TypeArguments="sd:DataTable" Name="dtWithNo" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[fileNameWithCurrentDateTime]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Format("{0:yyyy-MM-dd_HH-mm-ss}", DateTime.Now)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[getFolderPath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Path.GetDirectoryName(var_outPutFilePath)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ReadRange AddHeaders="True" DataTable="[dt_DealOutPut]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="[var_outPutFilePath]">
            <ui:ReadRange.Range>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:ReadRange.Range>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ReadRange>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="'If File.Exists(var_outPutFilePath) Then&#xD;&#xA; '   File.Delete(var_outPutFilePath)&#xD;&#xA;'End If&#xD;&#xA;'Dim dtWithYes As DataTable = New DataTable()&#xD;&#xA;        Dim dataRowsWithYes As DataRow() = dtClone.[Select](&quot;Is_Date='Yes'&quot;)&#xD;&#xA;&#xD;&#xA;        If dataRowsWithYes.Count() &gt; 0 Then&#xD;&#xA;            dtWithYes = dataRowsWithYes.CopyToDataTable()&#xD;&#xA;        Else&#xD;&#xA;            dtWithYes = dtClone.Clone()&#xD;&#xA;        End If&#xD;&#xA;&#xD;&#xA;        'Dim dtWithNo As DataTable = New DataTable()&#xD;&#xA;        Dim dataRowsWithNo As DataRow() = dtClone.[Select](&quot;Is_Date='No'&quot;)&#xD;&#xA;&#xD;&#xA;        If dataRowsWithNo.Count() &gt; 0 Then&#xD;&#xA;            dtWithNo = dataRowsWithNo.CopyToDataTable()&#xD;&#xA;        Else&#xD;&#xA;            dtWithNo = dtClone.Clone()&#xD;&#xA;        End If&#xD;&#xA;&#xD;&#xA;       ' Dim getFolderPath As String = Path.GetDirectoryName(var_outPutFilePath)&#xD;&#xA;        'Dim fileNameWithCurrentDateTime As String = String.Format(&quot;{0:yyyy-MM-dd_HH-mm-ss}&quot;, DateTime.Now)&#xD;&#xA;        Dim dsWithYesNoFilePath As String = Path.Combine(getFolderPath, &quot;dsWithYesNo_&quot; &amp; fileNameWithCurrentDateTime &amp; &quot;.xml&quot;)&#xD;&#xA;        Dim dsYesNo As DataSet = New DataSet()&#xD;&#xA;        dsYesNo.Tables.Add(dtWithYes)&#xD;&#xA;        dsYesNo.Tables.Add(dtWithNo)&#xD;&#xA;        dsYesNo.WriteXml(dsWithYesNoFilePath)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="434,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="var_outPutFilePath">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="var_outPutFilePath" />
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtClone">
                <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="dt_DealOutPut" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="getFolderPath">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="getFolderPath" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="fileNameWithCurrentDateTime">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="fileNameWithCurrentDateTime" />
              </InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtWithYes">
                <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dtWithYes" />
              </OutArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtWithNo">
                <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dtWithNo" />
              </OutArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,415" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="[var_macroOutPutFilePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtWithYes]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Output" StartingCell="A2" />
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtWithNo]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="OutputForNoRecord" StartingCell="A2" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
        </Sequence>
      </If.Then>
    </If>
  </Sequence>
</Activity>